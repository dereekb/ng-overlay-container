{"version":3,"file":"main.js","mappings":"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","sources":["./projects/ng-overlay-container/src/lib/models/ng-overlay-container-configuration.interface.ts","./projects/ng-overlay-container/src/lib/models/ng-overlay-container-content.type.ts","./projects/ng-overlay-container/src/lib/models/ng-overlay-container-parameters.interface.ts","./projects/ng-overlay-container/src/lib/models/ng-popover-close-event.interface.ts","./projects/ng-overlay-container/src/lib/models/ng-popover-render-method.type.ts","./projects/ng-overlay-container/src/lib/ng-overlay-container.module.ts","./projects/ng-overlay-container/src/lib/ng-overlay-container.service.ts","./projects/ng-overlay-container/src/lib/popover-component/ng-popover-reference.ts","./projects/ng-overlay-container/src/lib/popover-component/ng-popover.component.ts","./projects/ng-overlay-container/src/lib/popover-component/ng-popover.component.html","./projects/ng-overlay-container/src/public-api.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/demo-overlay.component.ts","./src/app/demo/demo.component.ts","./src/app/demo/demo.component.html","./src/app/documentation/documentation.component.ts","./src/app/documentation/documentation.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { HorizontalConnectionPos, VerticalConnectionPos } from '@angular/cdk/overlay';\n\n/**\n * Configuration for the overlay container\n */\nexport interface NgOverlayContainerConfiguration {\n  /**\n   * Width of the overlay.\n   *\n   * Default: 400px\n   */\n  width?: string;\n\n  /**\n   * Height of the overlay.\n   *\n   * Default: 500px\n   */\n  height?: string;\n\n  /**\n   * The min-width of the overlay panel. If a number is provided, pixel units are assumed.\n   */\n  minWidth?: number | string;\n\n  /**\n   * The min-height of the overlay panel. If a number is provided, pixel units are assumed.\n   */\n  minHeight?: number | string;\n\n  // Currently there is an issue in the Angular CDK that messes up the maxWidth and maxHeight when using FlexibleConnectedPositionStrategy \n  // /**\n  //  * The max-width of the overlay panel. If a number is provided, pixel units are assumed.\n  //  */\n  // maxWidth?: number | string;\n\n  // /**\n  //  * The max-height of the overlay panel. If a number is provided, pixel units are assumed.\n  //  */\n  // maxHeight?: number | string;\n\n  /**\n   * Custom class for the overlay pane.\n   *\n   * Default: ng-overlay-container\n   */\n  panelClass?: string;\n\n  /**\n   * Whether the dialog has a backdrop.\n   *\n   * Default: true\n   */\n  hasBackdrop?: boolean;\n\n  /**\n   * Custom class for the backdrop.\n   *\n   * Default: cdk-overlay-transparent-backdrop\n   */\n  backdropClass?: string;\n\n  /**\n   * Wether the overlay should be positioned globaly on the screen.\n   *\n   * Default: false\n   */\n  useGlobalPositionStrategy?: boolean;\n\n  /**\n   * Horizontal dimension of a connection point on the perimeter of the origin.\n   *\n   * Default: 'center'\n   */\n  originX?: HorizontalConnectionPos;\n\n  /**\n   * Vertical dimension of a connection point on the perimeter of the origin.\n   *\n   * Default: 'bottom'\n   */\n  originY?: VerticalConnectionPos;\n\n  /**\n   * Horizontal dimension of a connection point on the perimeter of the overlay element.\n   *\n   * Default: 'center'\n   */\n  overlayX?: HorizontalConnectionPos;\n\n  /**\n   * Vertical dimension of a connection point on the perimeter of the overlay element.\n   *\n   * Default: 'top'\n   */\n  overlayY?: VerticalConnectionPos;\n\n  /**\n   * Offset along the X axis in px.\n   *\n   * Default: 0\n   */\n  offsetX?: number;\n\n  /**\n   * Offset along the Y axis in px.\n   *\n   * Default: 10\n   */\n  offsetY?: number;\n\n  /**\n   * Wether the overlay is draggable.\n   *\n   * Default: false\n   */\n  isDraggable?: boolean;\n\n  /**\n   * Wether the overlay is resizable.\n   *\n   * Default: true\n   */\n  isResizable?: boolean;\n\n  /**\n   * Wether the overlay should close when clicking outside.\n   *\n   * Default: false\n   */\n  disableBackdropClose?: boolean;\n}\n\n/**\n * Default overlay container configuration\n */\nexport const DEFAULT_OVERLAY_CONFIGURATION: NgOverlayContainerConfiguration = {\n  hasBackdrop: true,\n  backdropClass: 'cdk-overlay-transparent-backdrop',\n  panelClass: 'ng-overlay-container',\n  useGlobalPositionStrategy: false,\n  width: '400px',\n  height: '500px',\n  originX: 'center',\n  originY: 'bottom',\n  overlayX: 'center',\n  overlayY: 'top',\n  offsetX: 0,\n  offsetY: 10,\n  isDraggable: false,\n  isResizable: true,\n  disableBackdropClose: false\n};\n","import { TemplateRef, Type } from '@angular/core';\n\n/**\n * Supported types of embedded content\n */\nexport type NgOverlayContainerContent = TemplateRef<any> | Type<any> | string;\n","import { NgOverlayContainerConfiguration } from './ng-overlay-container-configuration.interface';\nimport { NgOverlayContainerContent } from './ng-overlay-container-content.type';\n\n/**\n * Parameter structure to open an overlay container\n */\nexport interface NgOverlayContainerParameters<T> {\n    content: NgOverlayContainerContent;\n    origin?: HTMLElement;\n    data?: T;\n    configuration?: NgOverlayContainerConfiguration;\n}\n","/**\n * Parameter structure for closing a popover with data\n */\nexport interface NgPopoverCloseEvent<R> {\n    type: NgPopoverCloseType;\n    data: R;\n}\n\n/**\n * Type of close interaction\n */\nexport type NgPopoverCloseType = 'backdropClick' | 'close';\n","/**\n * Supported rendering method types\n */\nexport type NgPopoverRenderMethod = 'template' | 'component' | 'text';\n","import { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { NgModule } from '@angular/core';\nimport { NgPopoverComponent } from './popover-component/ng-popover.component';\nimport { NgOverlayContainerService } from './ng-overlay-container.service';\n\n@NgModule({\n  imports: [CommonModule, OverlayModule, PortalModule, DragDropModule],\n  declarations: [NgPopoverComponent],\n  exports: [NgPopoverComponent],\n  providers: [NgOverlayContainerService]\n})\nexport class NgOverlayContainerModule {}\n","import { ConnectionPositionPair, Overlay, OverlayConfig, PositionStrategy } from '@angular/cdk/overlay';\nimport { ComponentPortal, PortalInjector } from '@angular/cdk/portal';\nimport { Injectable, Injector } from '@angular/core';\nimport {\n  DEFAULT_OVERLAY_CONFIGURATION,\n  NgOverlayContainerConfiguration\n} from './models/ng-overlay-container-configuration.interface';\nimport { NgOverlayContainerParameters } from './models/ng-overlay-container-parameters.interface';\nimport { NgPopoverRef } from './popover-component/ng-popover-reference';\nimport { NgPopoverComponent } from './popover-component/ng-popover.component';\n\n/**\n * The NgOverlayContainerService is an injectable service to open a {@link NgPopoverComponent} that behaves as a parent\n * where anything from text, component or template can be embedded dynamically.\n *\n */\n@Injectable()\nexport class NgOverlayContainerService {\n  public constructor(private overlay: Overlay, private injector: Injector) {}\n\n  /**\n   * Opens an popover relative to the {@param origin} with the provided {@param content}.\n   * @param T The data passed into the container to be available in the embedded e.g. component\n   * @param R The response data type returned from the afterClosed$ observable when calling close(data?: R)\n   * @param content The dynamic content to be rendered: 'template' | 'component' | 'text'\n   * @param origin The origin to which the popover is attached. Not needed if used in combination with NgOverlayContainerConfiguration.useGlobalPositionStrategy = true. If the overlay can't be displayed on the screen, fallback positions are used\n   * @param data Any data that is needed in the rendered component (accessible from the component constructor via the PopoverRef (DI)) or in the template via template variable let-data\n   * @param configuration Any custom overlay configuration\n   * @returns The reference to the NgPopoverRef\n   */\n  public open<T = any, R = any>({\n    content,\n    origin,\n    data,\n    configuration\n  }: NgOverlayContainerParameters<T>): NgPopoverRef<T, R> {\n    const configurationApplied = { ...DEFAULT_OVERLAY_CONFIGURATION, ...configuration };\n    const overlayRef = this.overlay.create(this.getOverlayConfig(origin, configurationApplied));\n\n    if (configuration?.panelClass) {\n      overlayRef.addPanelClass(configuration.panelClass);\n    }\n\n    if (configurationApplied?.isResizable) {\n      overlayRef.addPanelClass('isResizable');\n    }\n\n    const ngPopoverRef = new NgPopoverRef<T, R>(\n      this.overlay,\n      overlayRef,\n      content,\n      data,\n      configuration?.isDraggable ?? DEFAULT_OVERLAY_CONFIGURATION.isDraggable,\n      configuration?.disableBackdropClose ?? DEFAULT_OVERLAY_CONFIGURATION.disableBackdropClose\n    );\n\n    const injector = this.createInjector(ngPopoverRef, this.injector);\n    overlayRef.attach(new ComponentPortal(NgPopoverComponent, null, injector));\n\n    return ngPopoverRef;\n  }\n\n  private getOverlayConfig(origin: HTMLElement, configuration: NgOverlayContainerConfiguration): OverlayConfig {\n    const config = new OverlayConfig({\n      width: configuration.width,\n      height: configuration.height,\n      hasBackdrop: configuration.hasBackdrop,\n      panelClass: DEFAULT_OVERLAY_CONFIGURATION.panelClass,\n      backdropClass: configuration.backdropClass,\n      positionStrategy: this.getOverlayPosition(origin, configuration),\n      scrollStrategy: this.overlay.scrollStrategies.reposition()\n    });\n\n    return Object.assign(config, {\n      ...(configuration.minWidth && { minWidth: configuration.minWidth }),\n      ...(configuration.minHeight && { minHeight: configuration.minHeight })\n      // ...(configuration.maxWidth && { maxWidth: configuration.maxWidth }),\n      // ...(configuration.maxHeight && { maxHeight: configuration.maxHeight })\n    });\n  }\n\n  private getOverlayPosition(origin: HTMLElement, configuration: NgOverlayContainerConfiguration): PositionStrategy {\n    const positionStrategy = configuration.useGlobalPositionStrategy\n      ? this.overlay\n          .position()\n          .global()\n          .centerHorizontally(configuration.offsetX.toString())\n          .centerVertically(configuration.offsetY.toString())\n      : this.overlay\n          .position()\n          .flexibleConnectedTo(origin)\n          .withPositions(this.getPositions(configuration))\n          .withPush(false);\n\n    return positionStrategy;\n  }\n\n  private getPositions(configuration: NgOverlayContainerConfiguration): ConnectionPositionPair[] {\n    return [\n      {\n        originX: configuration.originX,\n        originY: configuration.originY,\n        overlayX: configuration.overlayX,\n        overlayY: configuration.overlayY,\n        offsetX: configuration.offsetX,\n        offsetY: configuration.offsetY\n      }, // Fallback positions if provided position is not possible\n      {\n        // Bottom\n        originX: 'center',\n        originY: 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n      },\n      {\n        // Right\n        originX: 'end',\n        originY: 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n      },\n      {\n        // Left\n        originX: 'start',\n        originY: 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n      },\n      {\n        // Top\n        originX: 'center',\n        originY: 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n      }\n    ];\n  }\n\n  private createInjector(popoverRef: NgPopoverRef, injector: Injector): PortalInjector {\n    const tokens = new WeakMap([[NgPopoverRef, popoverRef]]);\n    return new PortalInjector(injector, tokens);\n  }\n}\n","import { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\nimport { Subject } from 'rxjs';\nimport { NgOverlayContainerContent } from '../models/ng-overlay-container-content.type';\nimport { NgPopoverCloseEvent, NgPopoverCloseType } from '../models/ng-popover-close-event.interface';\n\n/**\n * The reference to the popover container.\n * @param T The data passed into the container to be available in the embedded e.g. component\n * @param R The response data type returned from the afterClosed$ observable when calling close(data?: R)\n */\nexport class NgPopoverRef<T = any, R = any> {\n  private afterClosed = new Subject<NgPopoverCloseEvent<R>>();\n  private initialOverlayConfig: OverlayConfig;\n  private toggled: boolean;\n\n  /**\n   * Observable to retrieve the returned data\n   */\n  public afterClosed$ = this.afterClosed.asObservable();\n\n  constructor(\n    private _overlay: Overlay,\n    public overlay: OverlayRef,\n    public content: NgOverlayContainerContent,\n    public data: T,\n    public isDraggable?: boolean,\n    public disableBackdropClose?: boolean\n  ) {\n    this.initialOverlayConfig = overlay.getConfig();\n    this.toggled = false;\n    if (!disableBackdropClose) {\n      overlay.backdropClick().subscribe(() => this._close('backdropClick', null));\n    }\n  }\n\n  /**\n   * Sets new width and/or height values. If omitted the current value is used\n   * @param width The new width\n   * @param height The new height\n   */\n  public resize(width?: string, height?: string): void {\n    const currentConfig = this.overlay.getConfig();\n    this.overlay.updateSize({ width: width ?? currentConfig.width, height: height ?? currentConfig.height });\n  }\n\n  /**\n   * Toggle maximize of the overlay\n   */\n  public toggleMaximize(): void {\n    if (!this.toggled) {\n      this.overlay.updatePositionStrategy(\n        this._overlay\n          .position()\n          .flexibleConnectedTo({} as HTMLElement)\n          .withPositions([\n            {\n              originX: 'center',\n              originY: 'bottom',\n              overlayX: 'center',\n              overlayY: 'top',\n              offsetX: 0,\n              offsetY: 0\n            }\n          ])\n      );\n      this.overlay.updateSize({ width: '100%', height: '100%' });\n    } else {\n      this.overlay.updateSize({\n        width: this.initialOverlayConfig.width,\n        height: this.initialOverlayConfig.height\n      });\n      this.overlay.updatePositionStrategy(this.initialOverlayConfig.positionStrategy);\n    }\n    this.toggled = !this.toggled;\n  }\n\n  /**\n   * Closes the container e.g. on a button click\n   * @param data The data returned when closing the container\n   */\n  public close(data?: R): void {\n    this._close('close', data);\n  }\n\n  private _close(type: NgPopoverCloseType, data: R): void {\n    this.overlay.dispose();\n    this.afterClosed.next({\n      type,\n      data\n    });\n    this.afterClosed.complete();\n  }\n}\n","import { Component, OnInit, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { NgOverlayContainerContent } from '../models/ng-overlay-container-content.type';\nimport { NgPopoverRenderMethod } from '../models/ng-popover-render-method.type';\nimport { NgPopoverRef } from './ng-popover-reference';\n\n/**\n * The host component that embeds the provided content\n */\n@Component({\n    templateUrl: './ng-popover.component.html',\n    styleUrls: ['./ng-popover.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class NgPopoverComponent implements OnInit {\n    public ngRenderMethod: NgPopoverRenderMethod;\n    public content: NgOverlayContainerContent;\n    public context: { data: any; close: any };\n    public isDraggable?: boolean;\n\n    public constructor(private ngPopoverRef: NgPopoverRef) {}\n\n    ngOnInit() {\n        this.content = this.ngPopoverRef.content;\n        this.isDraggable = this.ngPopoverRef.isDraggable;\n\n        if (typeof this.content === 'string') {\n            this.ngRenderMethod = 'text';\n        } else if (this.content instanceof TemplateRef) {\n            this.ngRenderMethod = 'template';\n            this.context = {\n                data: this.ngPopoverRef.data,\n                close: this.ngPopoverRef.close.bind(this.ngPopoverRef)\n            };\n        } else {\n            this.ngRenderMethod = 'component';\n        }\n    }\n}\n","<div cdkDrag\n     cdkDragHandle\n     cdkDragRootElement=\".cdk-overlay-pane\"\n     [cdkDragDisabled]=\"!isDraggable\"\n     [cdkDragBoundary]=\"'body'\"\n     id=\"ng-popover\"\n     class=\"ng-popover\">\n  <ng-container [ngSwitch]=\"ngRenderMethod\">\n\n    <div *ngSwitchCase=\"'text'\"\n         [innerHTML]=\"content\"></div>\n\n    <ng-container *ngSwitchCase=\"'template'\">\n      <ng-container *ngTemplateOutlet=\"content; context: context\"></ng-container>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"'component'\">\n      <ng-container *ngComponentOutlet=\"content\"></ng-container>\n    </ng-container>\n\n  </ng-container>\n</div>","/*\n * Public API Surface of ng-overlay-container\n */\n\nexport * from './lib/models/ng-overlay-container-configuration.interface';\nexport * from './lib/models/ng-overlay-container-content.type';\nexport * from './lib/models/ng-overlay-container-parameters.interface';\nexport * from './lib/models/ng-popover-close-event.interface';\nexport * from './lib/models/ng-popover-render-method.type';\nexport * from './lib/ng-overlay-container.module';\nexport * from './lib/ng-overlay-container.service';\nexport * from './lib/popover-component/ng-popover-reference';\nexport * from './lib/popover-component/ng-popover.component';\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'ng-overlay-container';\n}\n","<mat-drawer-container class=\"drawer-container\">\n\n  <mat-drawer #drawer\n              mode=\"over\"\n              autosize>\n    <div class=\"menu\">\n\n      <h3>NgOverlayContainer 🚀</h3>\n\n      <div class=\"menu-entries\">\n        <a [routerLink]=\"['/demo']\"\n           routerLinkActive=\"router-link-active\"\n           (click)=\"drawer.close()\">Demo ✨</a>\n        <a [routerLink]=\"['/docs']\"\n           routerLinkActive=\"router-link-active\"\n           (click)=\"drawer.close()\">Documentation 📖</a>\n        <a href=\"https://github.com/schulzi66/ng-overlay-container\"\n           target=\"_blank\"\n           rel=\"noopener\"\n           (click)=\"drawer.close()\">Github ⭐</a>\n        <a href=\"https://www.npmjs.com/package/ng-overlay-container\"\n           target=\"_blank\"\n           rel=\"noopener\"\n           (click)=\"drawer.close()\">NPM 🎁</a>\n      </div>\n    </div>\n  </mat-drawer>\n\n  <!-- Toolbar -->\n  <div class=\"toolbar\"\n       role=\"banner\">\n    <button mat-icon-button\n            (click)=\"drawer.toggle()\">\n      <mat-icon>menu</mat-icon>\n    </button>\n    <h3>NgOverlayContainer 🚀</h3>\n    <div class=\"spacer\"></div>\n  </div>\n\n  <router-outlet></router-outlet>\n\n  <!-- Footer -->\n  <footer>\n    Love NgOverlayContainer?&nbsp;\n    <a href=\"https://github.com/schulzi66/ng-overlay-container\"\n       target=\"_blank\"\n       rel=\"noopener\"> Give my repo a star.\n      <div class=\"github-star-badge\">\n        <svg class=\"material-icons\"\n             xmlns=\"http://www.w3.org/2000/svg\"\n             width=\"24\"\n             height=\"24\"\n             viewBox=\"0 0 24 24\">\n          <path d=\"M0 0h24v24H0z\"\n                fill=\"none\" />\n          <path d=\"M12 17.27L18.18 21l-1.64-7.03L22 9.24l-7.19-.61L12 2 9.19 8.63 2 9.24l5.46 4.73L5.82 21z\" />\n        </svg>\n        Star\n      </div>\n    </a>\n  </footer>\n</mat-drawer-container>","import { CommonModule } from '@angular/common';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSelectModule } from '@angular/material/select';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NgOverlayContainerModule } from 'ng-overlay-container';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { AppComponent } from './app.component';\nimport { DemoOverlayComponent } from './demo-overlay.component';\nimport { DemoComponent } from './demo/demo.component';\nimport { DocumentationComponent } from './documentation/documentation.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'demo',\n    pathMatch: 'full'\n  },\n  { path: 'demo', component: DemoComponent },\n  { path: 'docs', component: DocumentationComponent }\n];\n\n@NgModule({\n  declarations: [AppComponent, DemoOverlayComponent, DocumentationComponent, DemoComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    CommonModule,\n    FormsModule,\n    RouterModule.forRoot(routes, { useHash: true, relativeLinkResolution: 'legacy' }),\n    MarkdownModule.forRoot({\n      loader: HttpClient\n    }),\n    MatIconModule,\n    MatInputModule,\n    MatSidenavModule,\n    MatRadioModule,\n    MatButtonModule,\n    MatSelectModule,\n    HttpClientModule,    \n    NgOverlayContainerModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Component } from '@angular/core';\nimport { NgPopoverRef } from 'ng-overlay-container';\n@Component({\n  selector: 'demo-overlay',\n  template: `\n    <button style=\"float: right;\" mat-icon-button color=\"primary\" (click)=\"maximize()\">\n      <mat-icon>{{ resizeIcon }}</mat-icon>\n    </button>\n    <div style=\"display: flex; flex-direction: column; height: 100%;\">\n      <div style=\"flex: 1;\">\n        <h2>This is a demo component</h2>\n        <div>You can pass any component to be displayed into the overlay container.</div>\n        <div style=\"margin-bottom: 10px;\">\n          You can also pass data to the component like this number[]: {{ demoInput }}\n        </div>\n      </div>\n      <form style=\"margin: 10px;\">\n        <mat-form-field style=\"width: 100%;\">\n          <mat-label>Example data to pass back to host</mat-label>\n          <input name=\"valueTextField\" matInput value=\"\" [(ngModel)]=\"valueTextField\" />\n        </mat-form-field>\n      </form>\n\n      <button style=\"margin: 10px;\" mat-stroked-button color=\"primary\" (click)=\"close()\">Pass data back</button>\n    </div>\n  `\n})\nexport class DemoOverlayComponent {\n  private isExpanded: boolean;\n\n  public demoInput: number[];\n  public valueTextField = '';\n\n  constructor(\n    private popoverRef: NgPopoverRef<{\n      demoInput: number[];\n      returnValue: string;\n    }>\n  ) {\n    this.isExpanded = false;\n    this.demoInput = this.popoverRef.data.demoInput;\n  }\n\n  public get resizeIcon(): string {\n    return this.isExpanded ? 'fullscreen_exit' : 'fullscreen';\n  }\n\n  public close() {\n    this.popoverRef.close({ returnValue: this.valueTextField });\n  }\n\n  public maximize() {\n    this.popoverRef.toggleMaximize();\n    this.isExpanded = !this.isExpanded;\n  }\n}\n","import { HorizontalConnectionPos, VerticalConnectionPos } from '@angular/cdk/overlay';\nimport { Component, TemplateRef, ViewChild, ViewContainerRef } from '@angular/core';\nimport { NgOverlayContainerConfiguration, NgOverlayContainerService } from 'ng-overlay-container';\nimport { DemoOverlayComponent } from '../demo-overlay.component';\n\n@Component({\n  selector: 'app-demo',\n  templateUrl: './demo.component.html',\n  styleUrls: ['./demo.component.scss']\n})\nexport class DemoComponent {\n  @ViewChild('originTemplate', { static: false, read: ViewContainerRef })\n  originTemplate: ViewContainerRef;\n  @ViewChild('originComponent', { static: false, read: ViewContainerRef })\n  originComponent: ViewContainerRef;\n  @ViewChild('originText', { static: false, read: ViewContainerRef })\n  originText: ViewContainerRef;\n\n  public overlayConfiguration: NgOverlayContainerConfiguration;\n\n  public selectedWidth = '400px';\n  public widths = ['300px', '400px', '500px', '90vw', '100vw', '100%'];\n\n  public selectedHeight = '300px';\n  public heights = ['300px', '400px', '500px', '90vh', '100vh', '100%'];\n\n  public selectedMinWidth = undefined;\n  public minWidths = ['300px', '400px', '500px', '90vw', '100vw', '100%'];\n\n  public selectedMinHeight = undefined;\n  public minHeights = ['300px', '400px', '500px', '90vw', '100vw', '100%'];\n\n  // public selectedMaxWidth = undefined;\n  // public maxWidths = ['300px', '400px', '500px', '90vw', '100vw', '100%'];\n\n  // public selectedMaxHeight = undefined;\n  // public maxHeights = ['300px', '400px', '500px', '90vw', '100vw', '100%'];\n\n  public selectedOriginX: HorizontalConnectionPos = 'center';\n  public originXs = ['start', 'center', 'end'];\n\n  public selectedOriginY: VerticalConnectionPos = 'bottom';\n  public originYs = ['top', 'center', 'bottom'];\n\n  public selectedOverlayX: HorizontalConnectionPos = 'center';\n  public overlayXs = ['start', 'center', 'end'];\n\n  public selectedOverlayY: VerticalConnectionPos = 'top';\n  public overlayYs = ['top', 'center', 'bottom'];\n\n  public selectedOffsetX = '0';\n  public offsetXs = ['-20', '-10', '0', '10', '20'];\n\n  public selectedOffsetY = '10';\n  public offsetYs = ['-20', '-10', '0', '10', '20'];\n\n  public selectedHasBackdrop = 'true';\n  public hasBackdrops = ['true', 'false'];\n\n  public selectedBackdropClass = 'cdk-overlay-transparent-backdrop';\n  public backdropClasses = ['cdk-overlay-transparent-backdrop', 'cdk-overlay-dark-backdrop'];\n\n  public customPanelClass = 'custom-panel';\n\n  public selectedUseGlobalPositionStrategy = 'false';\n  public useGlobalPositionStrategy = ['true', 'false'];\n\n  public selectedIsDraggable = 'false';\n  public isDraggable = ['true', 'false'];\n\n  public selectedIsResizable = 'true';\n  public isResizable = ['true', 'false'];\n\n  public selectedDisableBackdropClose = 'false';\n  public disableBackdropClose = ['true', 'false'];\n\n  public selectedCommonPosition = 'bottom';\n  public commonPositions = ['bottom', 'right', 'left', 'top', 'overlay'];\n\n  constructor(private ngOverlayContainerService: NgOverlayContainerService) {\n    this.updateConfig();\n  }\n\n  public returnedValue: string;\n\n  public updateConfig(): void {\n    this.overlayConfiguration = {\n      hasBackdrop: /true/i.test(this.selectedHasBackdrop),\n      backdropClass: this.selectedBackdropClass,\n      panelClass: this.customPanelClass,\n      useGlobalPositionStrategy: /true/i.test(this.selectedUseGlobalPositionStrategy),\n      width: this.selectedWidth,\n      height: this.selectedHeight,\n      minWidth: this.selectedMinWidth,\n      minHeight: this.selectedMinHeight,\n      // maxWidth: this.selectedMaxWidth,\n      // maxHeight: this.selectedMaxHeight,\n      originX: this.selectedOriginX,\n      originY: this.selectedOriginY,\n      overlayX: this.selectedOverlayX,\n      overlayY: this.selectedOverlayY,\n      offsetX: Number(this.selectedOffsetX),\n      offsetY: Number(this.selectedOffsetY),\n      isDraggable: /true/i.test(this.selectedIsDraggable),\n      isResizable: /true/i.test(this.selectedIsResizable),\n      disableBackdropClose: /true/i.test(this.selectedDisableBackdropClose)\n    };\n  }\n\n  public updateCommonPosition(): void {\n    this.selectedWidth = '400px';\n    this.selectedHeight = '300px';\n    this.selectedUseGlobalPositionStrategy = 'false';\n    switch (this.selectedCommonPosition) {\n      case 'bottom':\n        this.selectedOriginX = 'center';\n        this.selectedOriginY = 'bottom';\n        this.selectedOverlayX = 'center';\n        this.selectedOverlayY = 'top';\n        break;\n      case 'right':\n        this.selectedOriginX = 'end';\n        this.selectedOriginY = 'center';\n        this.selectedOverlayX = 'start';\n        this.selectedOverlayY = 'center';\n        break;\n      case 'left':\n        this.selectedOriginX = 'start';\n        this.selectedOriginY = 'center';\n        this.selectedOverlayX = 'end';\n        this.selectedOverlayY = 'center';\n        break;\n      case 'top':\n        this.selectedOriginX = 'center';\n        this.selectedOriginY = 'top';\n        this.selectedOverlayX = 'center';\n        this.selectedOverlayY = 'bottom';\n        break;\n      case 'overlay':\n        this.selectedWidth = '90vw';\n        this.selectedHeight = '90vh';\n        this.selectedUseGlobalPositionStrategy = 'true';\n    }\n    this.updateConfig();\n  }\n\n  /**\n   * Demonstrates how to use the service with a TemplateRef\n   * @param content Reference to the ng-template\n   */\n  public openTemplate(content: TemplateRef<any>): void {\n    const ngPopoverRef = this.ngOverlayContainerService.open<string, { id: number }>({\n      content,\n      data: 'Demo Dummy',\n      origin: this.originTemplate.element.nativeElement,\n      configuration: this.overlayConfiguration\n    });\n\n    ngPopoverRef.afterClosed$.subscribe((result) => {\n      console.log('Returned value:');\n      console.log(result);\n    });\n  }\n\n  /**\n   * Demonstrates how to use the service with any component\n   * Make sure to include the Component (in this case DemoOverlayComponent) as entryComponent in your module\n   */\n  public openComponent(): void {\n    const ngPopoverRef = this.ngOverlayContainerService.open<{ demoInput: number[] }, { returnValue: string }>({\n      content: DemoOverlayComponent,\n      data: {\n        demoInput: [1, 2, 3, 4]\n      },\n      origin: this.originComponent.element.nativeElement,\n      configuration: this.overlayConfiguration\n    });\n\n    ngPopoverRef.afterClosed$.subscribe((result) => {\n      if (result.data) {\n        this.returnedValue = result.data.returnValue;\n      }\n    });\n  }\n\n  /**\n   * Demonstrates how to use the service with a plain text\n   */\n  public openText(): void {\n    const ngPopoverRef = this.ngOverlayContainerService.open({\n      content: 'Hello World 🌍🚀',\n      origin: this.originText.element.nativeElement,\n      configuration: this.overlayConfiguration\n    });\n\n    ngPopoverRef.afterClosed$.subscribe((result) => {\n      console.log('Returned value:');\n      console.log(result);\n    });\n  }\n\n  /**\n   * Demonstrates ho to use the service to open the overlay unrelated to any origin element by using `NgOverlayContainerConfiguration.useGlobalPositionStrategy = true`\n   */\n  public openWithoutOrigin(): void {\n    const ngPopoverRef = this.ngOverlayContainerService.open({\n      content: 'Demonstration Centered',\n      configuration: { useGlobalPositionStrategy: true }\n    });\n  }\n}\n","<div class=\"content\">\n\n  <div style=\"display: flex; align-items: center; flex-direction: column;\">\n    <h2>Demo</h2>\n    <p>You can use NgOverlayContainer with either a template, a component or just with a plain text.</p>\n    <p>You can return data from the embedded component to the parent. Returned value from component:</p>\n    <p>{{returnedValue}}</p>\n    <div class=\"common-positions\">\n      <div class=\"section\">\n        <h3>Common positions</h3>\n        <mat-radio-group [(ngModel)]=\"selectedCommonPosition\"\n                         (change)=\"updateCommonPosition()\">\n          <mat-radio-button *ngFor=\"let position of commonPositions\"\n                            [value]=\"position\">{{position}}</mat-radio-button>\n        </mat-radio-group>\n      </div>\n    </div>\n  </div>\n\n\n  <div class=\"card-container\">\n    <a class=\"card\"\n       target=\"_blank\"\n       rel=\"noopener\"\n       (click)=\"openTemplate(template)\"\n       #originTemplate>\n      <span>A template </span>\n\n      <ng-template #template\n                   let-data=\"data\"\n                   let-close=\"close\">\n        <div style=\"display: flex; flex-direction: column; height: 100%;\">\n          <div style=\"flex: 1;\">\n            <h2>This is a Template</h2>\n            <div>This is an example with utilizing ng-template.</div>\n            <div>This is data passed to the template: {{data}}</div>\n          </div>\n          <button mat-stroked-button\n                  color=\"primary\"\n                  (click)=\"close({id: 2})\">\n            Close</button>\n        </div>\n      </ng-template>\n    </a>\n\n    <a class=\"card\"\n       target=\"_blank\"\n       rel=\"noopener\"\n       (click)=\"openComponent()\"\n       #originComponent>\n      <span>A component</span>\n    </a>\n\n    <a class=\"card\"\n       target=\"_blank\"\n       rel=\"noopener\"\n       (click)=\"openText()\"\n       #originText>\n      <span>Plain text</span>\n    </a>\n  </div>\n\n  <div class=\"config-container\">\n    <div class=\"section\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Width</mat-label>\n        <mat-select [(ngModel)]=\"selectedWidth\"\n                    (selectionChange)=\"updateConfig()\">\n          <mat-option *ngFor=\"let width of widths\"\n                      [value]=\"width\">{{width}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"section\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>Height</mat-label>\n        <mat-select [(ngModel)]=\"selectedHeight\"\n                    (selectionChange)=\"updateConfig()\">\n          <mat-option *ngFor=\"let height of heights\"\n                      [value]=\"height\">{{height}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"section\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>MinWidth</mat-label>\n        <mat-select [(ngModel)]=\"selectedMinWidth\"\n                    (selectionChange)=\"updateConfig()\">\n          <mat-option *ngFor=\"let width of minWidths\"\n                      [value]=\"width\">{{width}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"section\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>MinHeight</mat-label>\n        <mat-select [(ngModel)]=\"selectedMinHeight\"\n                    (selectionChange)=\"updateConfig()\">\n          <mat-option *ngFor=\"let height of minHeights\"\n                      [value]=\"height\">{{height}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <!-- <div class=\"section\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>MaxWidth</mat-label>\n        <mat-select [(ngModel)]=\"selectedMaxWidth\"\n                    (selectionChange)=\"updateConfig()\">\n          <mat-option *ngFor=\"let maxWidth of maxWidths\"\n                      [value]=\"maxWidth\">{{maxWidth}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"section\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>MaxHeight</mat-label>\n        <mat-select [(ngModel)]=\"selectedMaxHeight\"\n                    (selectionChange)=\"updateConfig()\">\n          <mat-option *ngFor=\"let maxHeight of maxHeights\"\n                      [value]=\"maxHeight\">{{maxHeight}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div> -->\n    <div class=\"section\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>OriginX</mat-label>\n        <mat-select [(ngModel)]=\"selectedOriginX\"\n                    (selectionChange)=\"updateConfig()\">\n          <mat-option *ngFor=\"let originX of originXs\"\n                      [value]=\"originX\">{{originX}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"section\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>OriginY</mat-label>\n        <mat-select [(ngModel)]=\"selectedOriginY\"\n                    (selectionChange)=\"updateConfig()\">\n          <mat-option *ngFor=\"let originY of originYs\"\n                      [value]=\"originY\">{{originY}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"section\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>OverlayX</mat-label>\n        <mat-select [(ngModel)]=\"selectedOverlayX\"\n                    (selectionChange)=\"updateConfig()\">\n          <mat-option *ngFor=\"let overlayX of overlayXs\"\n                      [value]=\"overlayX\">{{overlayX}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"section\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>OverlayY</mat-label>\n        <mat-select [(ngModel)]=\"selectedOverlayY\"\n                    (selectionChange)=\"updateConfig()\">\n          <mat-option *ngFor=\"let overlayY of overlayYs\"\n                      [value]=\"overlayY\">{{overlayY}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"section\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>OffsetX in px</mat-label>\n        <mat-select [(ngModel)]=\"selectedOffsetX\"\n                    (selectionChange)=\"updateConfig()\">\n          <mat-option *ngFor=\"let offsetX of offsetXs\"\n                      [value]=\"offsetX\">{{offsetX}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"section\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>OffsetY in px</mat-label>\n        <mat-select [(ngModel)]=\"selectedOffsetY\"\n                    (selectionChange)=\"updateConfig()\">\n          <mat-option *ngFor=\"let offsetY of offsetYs\"\n                      [value]=\"offsetY\">{{offsetY}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </div>\n  <div class=\"config-container right\">\n    <div class=\"section\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>HasBackdrop</mat-label>\n        <mat-select [(ngModel)]=\"selectedHasBackdrop\"\n                    (selectionChange)=\"updateConfig()\">\n          <mat-option *ngFor=\"let hasBackdrop of hasBackdrops\"\n                      [value]=\"hasBackdrop\">{{hasBackdrop}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"section\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>BackdropClass</mat-label>\n        <mat-select [(ngModel)]=\"selectedBackdropClass\"\n                    (selectionChange)=\"updateConfig()\">\n          <mat-option *ngFor=\"let backdropClass of backdropClasses\"\n                      [value]=\"backdropClass\">\n            {{backdropClass}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"section\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>UseGlobalPositionStrategy</mat-label>\n        <mat-select [(ngModel)]=\"selectedUseGlobalPositionStrategy\"\n                    (selectionChange)=\"updateConfig()\">\n          <mat-option *ngFor=\"let useGlobal of useGlobalPositionStrategy\"\n                      [value]=\"useGlobal\">\n            {{useGlobal}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"section\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>IsDraggable</mat-label>\n        <mat-select [(ngModel)]=\"selectedIsDraggable\"\n                    (selectionChange)=\"updateConfig()\">\n          <mat-option *ngFor=\"let draggable of isDraggable\"\n                      [value]=\"draggable\">{{draggable}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"section\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>IsResizable</mat-label>\n        <mat-select [(ngModel)]=\"selectedIsResizable\"\n                    (selectionChange)=\"updateConfig()\">\n          <mat-option *ngFor=\"let resizable of isResizable\"\n                      [value]=\"resizable\">{{resizable}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"section\">\n      <mat-form-field appearance=\"outline\">\n        <mat-label>DisableCloseOnBackdropClick</mat-label>\n        <mat-select [(ngModel)]=\"selectedDisableBackdropClose\"\n                    (selectionChange)=\"updateConfig()\">\n          <mat-option *ngFor=\"let disable of disableBackdropClose\"\n                      [value]=\"disable\">{{disable}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-documentation',\n  templateUrl: './documentation.component.html',\n  styleUrls: ['./documentation.component.scss']\n})\nexport class DocumentationComponent {\n}\n","<div class=\"content\">\n    <h2>Documentation</h2>\n\n    <markdown [src]=\"'assets/README.md'\"></markdown>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}